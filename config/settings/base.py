"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 2.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
from decouple import config

# Build paths
BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(
    __file__))))

# Url configuration file path
ROOT_URLCONF = 'config.urls'

# Frontend app directory
APPS_DIR = '{0}/frontend'.format(BASE_DIR)

# Django secret key
SECRET_KEY = config('SECRET_KEY')

# DEBUG mode for development
DEBUG = config('DEBUG', cast=bool)

# Production database settings
IS_RDS = 'RDS_HOSTNAME' in os.environ

# read ALLOWED_HOSTS from environment
ALLOWED_HOSTS = config(
    'ALLOWED_HOSTS',
    cast=lambda v: [d for d in [s.strip() for s in v.split(' ')] if d],
    default='',
)

# Allow CORS
CORS_ALLOW_CREDENTIALS = True

# Wsgi configuration file path
WSGI_APPLICATION = 'config.wsgi.application'

# Application definition
DJANGO_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]
THIRD_PARTY_APP = [
    'rest_framework',
    'knox',
    'webpack_loader',
]
PROJECT_APPS = [
    'accounts.apps.AccountsConfig',
    'resume',
    'frontend',
    'listing',
]
INSTALLED_APPS = DJANGO_APPS + THIRD_PARTY_APP + PROJECT_APPS

# Rest framework settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': ('knox.auth.TokenAuthentication',)
}

# Django webpack loader setting
WEBPACK_LOADER = {
    'DEFAULT': {
        'CACHE': False,
        'BUNDLE_DIR_NAME': 'bundles/',
        'STATS_FILE': os.path.join(APPS_DIR, 'webpack-stats-dev.json'),
        'POLL_INTERVAL': 0.1,
        'TIMEOUT': None,
        'IGNORE': [r'.+\.hot-update.js', r'.+\.map'],
        'LOADER_CLASS': 'webpack_loader.loader.WebpackLoader',
    }
} if DEBUG else {
    'DEFAULT': {
        'CACHE': True,
        'BUNDLE_DIR_NAME': 'bundles/',
        'STATS_FILE': os.path.join(APPS_DIR, 'webpack-stats-dev.json'),
        'POLL_INTERVAL': 0.1,
        'TIMEOUT': None,
        'IGNORE': [r'.+\.hot-update.js', r'.+\.map'],
        'LOADER_CLASS': 'webpack_loader.loader.WebpackLoader',
    }
}

# Django middleware
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# Django template setting
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            '{0}/templates'.format(APPS_DIR),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# Database setting
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': config('RDS_DB_NAME', ''),
        'USER': config('RDS_USERNAME', ''),
        'PASSWORD': config('RDS_PASSWORD', ''),
        'HOST': config('RDS_HOSTNAME', ''),
        'PORT': config('RDS_PORT', ''),
    }
} if IS_RDS else {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': config('DB_NAME', ''),
        'USER': config('DB_USER', ''),
        'PASSWORD': config('DB_PASS', ''),
        'HOST': 'localhost',
        'PORT': '5432',
    }
}

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation'
                '.UserAttributeSimilarityValidator',
    }, {
        'NAME': 'django.contrib.auth.password_validation'
                '.MinimumLengthValidator',
    }, {
        'NAME': 'django.contrib.auth.password_validation'
                '.CommonPasswordValidator',
    }, {
        'NAME': 'django.contrib.auth.password_validation'
                '.NumericPasswordValidator',
    },
]

# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True

ROOT_URLCONF = 'config.urls'

# Static files setting
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(APPS_DIR, 'static')
